# This workflow will build and push a new container image to Amazon ECR,
# and then will deploy a new task definition to Amazon ECS, when a release is created

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

name: Deploy to Amazon ECS

jobs:
  deploy:
    name: Deploy
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v2

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-central-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPO_IAGO: iago
        # ECR_REPO_IAGO_SERVERLESS: iago-serverless-transformer
        IMAGE_TAG: ${{ github.sha }}
      run: |
        # Build a docker container and push it to ECR so that it can be deployed to ECS.
        docker-compose -f docker-compose.deploy.yml build
        # docker build -t $ECR_REGISTRY/$ECR_REPO_IAGO_SERVERLESS:$IMAGE_TAG ./iago-serverless-transformer
        docker tag iago:django-latest $ECR_REGISTRY/$ECR_REPO_IAGO:$IMAGE_TAG
        docker tag iago:nginx-latest $ECR_REGISTRY/$ECR_REPO_IAGO:nginx-latest
        docker push $ECR_REGISTRY/$ECR_REPO_IAGO:$IMAGE_TAG
        # docker push $ECR_REGISTRY/$ECR_REPO_IAGO_SERVERLESS:$IMAGE_TAG
        docker push $ECR_REGISTRY/$ECR_REPO_IAGO:nginx-latest
        echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPO_IAGO:$IMAGE_TAG"

    - name: Fill in the new image ID in the Amazon ECS task definition
      id: task-def
      uses: aws-actions/amazon-ecs-render-task-definition@v1
      with:
        task-definition: task-definition.json
        container-name: iago-django
        image: ${{ steps.build-image.outputs.image }}

    - name: Deploy Amazon ECS task definition
      uses: aws-actions/amazon-ecs-deploy-task-definition@v1
      with:
        task-definition: ${{ steps.task-def.outputs.task-definition }}
        service: iago-service
        cluster: iago-cluster
        wait-for-service-stability: true
